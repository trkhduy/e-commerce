spring.application.name=identity-service

#server
server.port=8080
#server.servlet.context-path=/identity

#database
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#token
token.secret.key=ukMWlV0CRJZSRbBNlMvgtwR59a7l2r2ttw75QBPNk6ZcC9DnnUFr+MjpjytDpTxC
token.expiration.time=3600
token.refresh.expiration.time=86400
token.verify-mail.expiration.time=120

#cors
config.cors=http://localhost:3000,http://localhost:4567

#Consumer Configuration
spring.consumer.boostrap-servers=192.168.0.63:9092
spring.kafka.consumer.bootstrap-servers=192.168.0.63:9092
spring.kafka.consumer.group-id=kafka-websocket-connector
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.max.poll.interval.ms=60000
spring.kafka.consumer.properties.max.poll.records=500

##producer
spring.kafka.producer.bootstrap-servers=192.168.0.63:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#Topic
spring.kafka.topic.send.email=email-message

#Call Api from identity-service
path.verifyEmail=https://localhost:8080/api/v1/auth/verifyAccount?token={{token}}&userId={{userId}}
path.forgotPassword=https://localhost:3000/forgotPassword?token={{token}}&userId={{userId}}&typeToken=FORGOT_PASSWORD_TOKEN
